diff --git a/src/core/render/shader.cpp b/src/core/render/shader.cpp
index 58216cd..ac60244 100644
--- a/src/core/render/shader.cpp
+++ b/src/core/render/shader.cpp
@@ -23,21 +23,19 @@ Shader::Shader(const vk::Device& device, std::vector<uint32_t>&& code) :
     codeSize = code.size() * 4; //to get size in bytes
 	ci.setPCode(code.data());
 	ci.setCodeSize(codeSize);
-	module = device.createShaderModule(ci);
+	module = device.createShaderModuleUnique(ci);
     initialize();
 	std::cout << "Shader constructed" << '\n';
 }
 
 Shader::~Shader()
 {
-	if (module)
-		device.destroyShaderModule(module);
 }
 
 void Shader::initialize()
 {
 	stageInfo.setPName("main");
-	stageInfo.setModule(module);
+	stageInfo.setModule(*module);
 
 	mapEntries.resize(4);
 	mapEntries[0].setSize(sizeof(float));
@@ -67,12 +65,12 @@ void Shader::initialize()
 void Shader::reload(std::vector<uint32_t>&& code)
 {
     assert (module); //otherwise we should not be reloading
-    device.destroyShaderModule(module);
+    device.destroyShaderModule(*module);
 	vk::ShaderModuleCreateInfo ci;
     codeSize = code.size() * 4; //to get size in bytes
 	ci.setPCode(code.data());
 	ci.setCodeSize(codeSize);
-	module = device.createShaderModule(ci);
+	module = device.createShaderModuleUnique(ci);
     initialize();
     std::cout << "Shader reloaded" << '\n';
 }
@@ -119,7 +117,7 @@ void Shader::createModule()
 	vk::ShaderModuleCreateInfo ci;
 	ci.setPCode(shaderCode.data());
 	ci.setCodeSize(codeSize);
-	module = device.createShaderModule(ci);
+	module = device.createShaderModuleUnique(ci);
 }
 
 void Shader::setWindowResolution(const uint32_t w, const uint32_t h)
diff --git a/src/core/render/shader.hpp b/src/core/render/shader.hpp
index 9a56e77..450cdfe 100644
--- a/src/core/render/shader.hpp
+++ b/src/core/render/shader.hpp
@@ -46,7 +46,7 @@ private:
     const vk::Device& device;
     std::vector<uint32_t> shaderCode;
     size_t codeSize;
-    vk::ShaderModule module{nullptr};
+    vk::UniqueShaderModule module{nullptr};
 
     void loadFile(std::string filepath);
     void createModule();
