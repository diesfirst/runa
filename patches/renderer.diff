diff --git a/src/core/render/renderer.cpp b/src/core/render/renderer.cpp
index a47b5bc..3c1fc07 100644
--- a/src/core/render/renderer.cpp
+++ b/src/core/render/renderer.cpp
@@ -16,7 +16,7 @@ namespace render
 
 Renderer::Renderer(Context& context) :
 	context{context},
-	device{context.getDevice()},
+	device{context.device},
 	graphicsQueue{context.getGraphicQueue(0)},
     commandPool{
         device, 
@@ -276,9 +276,6 @@ Attachment& Renderer::createAttachment(
         const std::string name, const vk::Extent2D extent,
         const vk::ImageUsageFlags usageFlags)
 {
-    SWD_DEBUG_MSG("Context " << &context);
-    SWD_DEBUG_MSG("Context Device " << context.getDevice());
-    SWD_DEBUG_MSG("Device " << device);
     auto attachment = std::make_unique<Attachment>(device, extent, usageFlags);
     attachments.emplace(name, std::move(attachment));
     return *attachments.at(name);
@@ -621,7 +618,7 @@ void Renderer::createDescriptorPool()
 void Renderer::createHostBuffer(uint32_t size)
 {
 	hostBuffer = std::make_unique<Buffer>(
-			context.getBufferResources(), 
+            context.getBufferResources(),
 			size, 
 			vk::BufferUsageFlagBits::eUniformBuffer |
             vk::BufferUsageFlagBits::eTransferDst |
@@ -846,6 +843,11 @@ vk::Extent2D Renderer::getSwapExtent()
     return swapchain->getExtent2D();
 }
 
+BufferResources Context::getBufferResources() const
+{
+    return {device, physicalDeviceProperties, physicalDeviceMemoryProperties};
+}
+
 
 }; // namespace render
 
